@page "/"

@inherits LayoutComponentBase
@using Shrooms.Services;
@using Shrooms.Parsers;
@inject NavigationManager _nav;
@inject CustomVisionService _customVision;
@inject BlobStorageService _blobStorage;

    <MudCard Elevation="4" Style="margin: auto; margin-top: 70px; margin-bottom: 40px; min-height: 100px; padding: 0; min-width: 50%; max-width: 50%;
             border: 1px solid lightgrey">
    <MudStack Style="width: 100%">
        @if(!loading)
        {
            <MudFileUpload T="IBrowserFile" OnFilesChanged="UploadFile" SuppressOnChangeWhenInvalid Hidden="false" Class="flex-1" InputClass="absolute mud-width-full mud-height-full overflow-hidden z-20" InputStyle="opacity:0" Style="margin-left: 15px; margin-right: 15px"
                       @ondragenter="@SetDragClass" @ondragleave="@ClearDragClass" @ondragend="@ClearDragClass">
                <ButtonTemplate>
                    <MudPaper Height="300px" Outlined="true" Class="@DragClass">
                        <MudItem Style="text-align: center">
                            <div>
                                <MudText Typo="Typo.h6" Align="Align.Center" Style="margin-top: 10px">Wgraj zdjęcie grzyba (.jpg, .png)</MudText>
                                <MudIcon Icon="@Icons.Filled.CloudUpload" Size="Size.Large" Style="color: grey; margin-top: 2vh"></MudIcon>
                            </div>
                            <div>
                                @if (fileName is not null)
                                {
                                    <MudChip Color="Color.Dark" Text="@fileName"></MudChip>
                                }
                            </div>
                        </MudItem>
                    </MudPaper>
                </ButtonTemplate>
            </MudFileUpload>

            <MudToolBar DisableGutters="true" Class="gap-4" Style="margin-left: 15px; margin-right: 15px">
                <MudButton OnClick="Upload" Disabled="@(fileName is null)" Color="Color.Primary" Variant="Variant.Filled">Upload</MudButton>
                <MudButton OnClick="Clear" Disabled="@(fileName is null)" Color="Color.Error" Variant="Variant.Filled">Clear</MudButton>
            </MudToolBar>  
        }
        else
        {
            <MudItem Style="text-align: center">
                <div style="margin-top:10px"></div>
                <MudProgressCircular Color="Color.Default" Indeterminate="true"/>
            </MudItem>
        }
    </MudStack>
    </MudCard>

@code {
    private static string DefaultDragClass = "relative rounded-lg border-2 border-dashed pa-4 mt-4 mud-width-full mud-height-full z-10";
    private string DragClass = DefaultDragClass;
    private string? fileName = null;
    private IBrowserFile? file = null;
    private bool loading = false;

    private void UploadFile(InputFileChangeEventArgs e)
    {
        if (e.File.ContentType.Contains("image"))
        {
            fileName = e.File.Name;
            file = e.File;
        }
    }

    private async Task Clear()
    {
        fileName = null;
        file = null;
        ClearDragClass();
        await Task.Delay(100);
    }

    private async Task Upload()
    {
        loading = true;
        StateHasChanged();

        var (name, probability) = await _customVision.ClassifyMushroom(file.OpenReadStream());

        var (polishName, mushroomType) = MushroomNameParser.GetPolishNameAndMushroomType(name);

        var blobName = await _blobStorage.SaveFileToBlobStorage(file);

        _nav.NavigateTo($"/result/{polishName}/{probability.ToString()}/{mushroomType}/{blobName}");
    }

    private void SetDragClass()
    {
        DragClass = $"{DefaultDragClass} mud-border-primary";
    }

    private void ClearDragClass()
    {
        DragClass = DefaultDragClass;
    }
}