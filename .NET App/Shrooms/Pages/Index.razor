@page "/"

@inherits LayoutComponentBase
@using Shrooms.Controllers;
@inject NavigationManager _nav;

    <MudCard Elevation="4" Style="margin: auto; margin-top: 70px; margin-bottom: 40px; min-height: 100px; padding: 0; min-width: 50%; max-width: 50%;
             border: 1px solid lightgrey">
    <MudStack Style="width: 100%">
        <MudFileUpload T="IBrowserFile" OnFilesChanged="UploadFile" SuppressOnChangeWhenInvalid Hidden="false" Class="flex-1" InputClass="absolute mud-width-full mud-height-full overflow-hidden z-20" InputStyle="opacity:0" Style="margin-left: 15px; margin-right: 15px"
                       @ondragenter="@SetDragClass" @ondragleave="@ClearDragClass" @ondragend="@ClearDragClass">
            <ButtonTemplate>
                <MudPaper Height="300px" Outlined="true" Class="@DragClass">
                    <MudItem Style="text-align: center">
                        <MudText Typo="Typo.h6" Align="Align.Center" Style="margin-top: 10px">Wgraj zdjęcie grzyba</MudText>
                        <MudIcon Icon="@Icons.Filled.CloudUpload" Size="Size.Large" Style="color: grey; margin-top: 2vh"></MudIcon>
                        @if (fileName is not null)
                        {
                            <MudChip Color="Color.Dark" Text="@fileName"></MudChip>
                        }
                    </MudItem>
                </MudPaper>
            </ButtonTemplate>
        </MudFileUpload>

        <MudToolBar DisableGutters="true" Class="gap-4" Style="margin-left: 15px; margin-right: 15px">
            <MudButton OnClick="Upload" Disabled="@(fileName is null)" Color="Color.Primary" Variant="Variant.Filled">Upload</MudButton>
            <MudButton OnClick="Clear" Disabled="@(fileName is null)" Color="Color.Error" Variant="Variant.Filled">Clear</MudButton>
        </MudToolBar>
    </MudStack>
    </MudCard>

@code {
    private static string DefaultDragClass = "relative rounded-lg border-2 border-dashed pa-4 mt-4 mud-width-full mud-height-full z-10";
    private string DragClass = DefaultDragClass;
    private string? fileName = null;
    private IBrowserFile? file = null;

    private void UploadFile(InputFileChangeEventArgs e)
    {
        if (!e.File.ContentType.Contains("image"))
        {
            //powiadomienie, że tylko jpg png
        }
        else
        {
            fileName = e.File.Name;
            file = e.File;
        }
    }

    private async Task Clear()
    {
        fileName = null;
        file = null;
        ClearDragClass();
        await Task.Delay(100);
    }
    private async Task Upload()
    {
        // zapis do blob storage
        //var blobController = new BlobStorageController();
        //await blobController.SaveFileToStorage(file);
        
        // klasyfikacja przez custom vision
        // wynik klasyfikacji jako argument dla strony result

        _nav.NavigateTo("/result");
    }

    private void SetDragClass()
    {
        DragClass = $"{DefaultDragClass} mud-border-primary";
    }

    private void ClearDragClass()
    {
        DragClass = DefaultDragClass;
    }
}